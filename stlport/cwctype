/*
 * Copyright (c) 1999 
 * Boris Fomitchev
 *
 * This material is provided "as is", with absolutely no warranty expressed
 * or implied. Any use is at your own risk.
 *
 * Permission to use or copy this software for any purpose is hereby granted 
 * without fee, provided the above notices are retained on all copies.
 * Permission to modify the code and to distribute modified code is granted,
 * provided the above notices are retained, and a notice that the code was
 * modified is included with the above copyright notice.
 *
 */

#ifndef __STLPORT_CWCTYPE
# define __STLPORT_CWCTYPE

# ifndef __STL_CONFIG_H
#  include <stl_config.h>
# endif

#  if defined ( __STL_REDEFINE_STD ) && defined (std) 
#    undef std
#    define __STL_RESUME_STD_FOR_CWCTYPE
#    define __STLPORT_NATIVE_PASS
#  endif

# if defined (__STL_USE_NEW_C_HEADERS)

# include __STL_NATIVE_CPP_C_HEADER(cwctype)

# ifdef __MSL__
namespace std {
	typedef wchar_t wctrans_t;
	wint_t 		towctrans(wint_t c, wctrans_t value);
	wctrans_t 	wctrans(const char *name);
}
# endif
# else
#  include <wctype.h>
# endif

# if defined ( __STL_RESUME_STD_FOR_CWCTYPE )
#    undef __STL_RESUME_STD_FOR_CWCTYPE
#    define std __STLPORT_NAMESPACE
#    undef __STLPORT_NATIVE_PASS
# endif


# ifdef __STL_IMPORT_VENDOR_CSTD
__STL_BEGIN_NAMESPACE

# if ! defined (__BORLANDC__)
using __STL_VENDOR_CSTD::wctrans_t;
using __STL_VENDOR_CSTD::towctrans;
using __STL_VENDOR_CSTD::wctrans;
using __STL_VENDOR_CSTD::wctype;
using __STL_VENDOR_CSTD::iswctype;
# endif

using __STL_VENDOR_CSTD::wctype_t;
using __STL_VENDOR_CSTD::wint_t;

using __STL_VENDOR_CSTD::iswalnum;
using __STL_VENDOR_CSTD::iswalpha;
using __STL_VENDOR_CSTD::iswcntrl;

using __STL_VENDOR_CSTD::iswdigit;
using __STL_VENDOR_CSTD::iswgraph;
using __STL_VENDOR_CSTD::iswlower;
using __STL_VENDOR_CSTD::iswprint;
using __STL_VENDOR_CSTD::iswpunct;
using __STL_VENDOR_CSTD::iswspace;
using __STL_VENDOR_CSTD::iswupper;
using __STL_VENDOR_CSTD::iswxdigit;

using __STL_VENDOR_CSTD::towlower;
using __STL_VENDOR_CSTD::towupper;


__STL_END_NAMESPACE

#endif /* __STL_IMPORT_VENDOR_CSTD */

#endif /* __STLPORT_CWCTYPE */

// Local Variables:
// mode:C++
// End:
