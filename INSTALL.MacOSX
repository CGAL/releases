$CGAL/INSTALL.MacOSX
-----------------------------------------------------------------------------
This file describes how to install CGAL on the MacOSX operating system.
CGAL has been tested on Tiger (MacOSX 10.4).

For installation on Unix and on Cygwin, please see INSTALL.
For installation under Windows using native tools, see INSTALL.win32.

The documentation of CGAL is available in various formats (HTML, PostScript,
PDF). It is not bundled with the software but can be downloaded separately.

For more information about CGAL, see the URL http://www.cgal.org/.


Installation
- Download the compressed archive file from the CGAL web site www.cgal.org
- unpack the file in the place in which you wish to install it
- install the CGAL libraries: 
  the impatient can just try to run "./install_cgal -ni g++", but we recommend
  to first have a look at the Installation notes available from the
  CGAL web site. http://www.cgal.org/Manual/


Boost
CGAL needs boost in order to work.  Boost can be easily installed via Fink.
Alternatively, go to www.boost.org and download the source tarball and
the tarball for bjam.  To install boost follow the instructions in
www.boost.org (it is recommended to use the default install path).


GMP and MPFR
Most examples and demos need GMP and MPFR.  GMP and MPFR can be installed via Fink.
Alternatively, you can either download the sources from http://gmplib.org/
and http://mpfr.org/ and follow the installation instructions in there.


Building the Demos

The demos come in CGALROOT/demo directory. The demos need Qt installed.
You can download Qt for MacOSX from www.trolltech.com. Tiger needs Qt
version 3.3.5 or later.


Running the Demos

In order to run the examples you need to apply the cgal_make_macosx_app
script which creates the appropriate directory structure so that a CGAL
Qt demo can be run on MacOSX. The script resides in
$(CGALROOT)/scripts and should be applied to the executable created by
the demo makefile:
    prompt:> $(CGALROOT)/scripts/cgal_make_macosx_app <demo-executable>
The script creates a directory <demo-executable>.app/ which is the
root directory of the directory structure needed by MacOSX.
To run the demo use the "open" command from the prompt:
    prompt:> open <demo-executable>.app
