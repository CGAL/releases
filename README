
CGAL KERNEL README

Release 0.3

.......................................................................
The files are organized as follows:

Cgal/include/CGAL/*.h        --- header files
Cgal/src/*.C                 --- C++ source code

Cgal/manual.ps               --- The User Manual

Cgal/example/*               --- An example application
        

.......................................................................
How to install CGAL:

0. Goto where the source code for CGAL is, that is  Cgal/src

1. Modify makefile:
   Choose the compiler and adjust the paths where to find LEDA 
   and CGAL's home directory.
   See also the README file in this directory.

2. Type gmake lib   (gmake is gnu's make)

You now should have an archive file named libCGALkernel.a in the
directory Cgal/lib* corresponding to the architecture of your
machine and the chosen compiler, e.g., lib_sunos4_g++  for the library
compiled on a SUN with operating system 4 with the GNU g++ compiler.


3. The manual (Cgal/doc/manual.ps) comes in A4 format. It is written 
   in LaTeX book style and you obtain a little booklet if you use the 
   ps2book command.

.......................................................................
How to use CGAL in your own application? 

You best look at the directory Cgal/example. It gives you a master
makefile and an example application program.C. You can compile it by
the call "gmake program"   in the directory Cgal/example. 

If you are not expected to compile in the directory where CGAL is
installed, you should copy the entire directory Cgal/example to your 
account and read the README file in this directory.

DO NOT copy the library itself, that is the header or source files.
Not only that it takes space on disks, you will sooner or later end
up with an outdated local copy.


.......................................................................
How CGAL support multiple architectures/compilers?

The current setup of the makefiles guarantees that when you change 
the compiler the appropriate libraries are linked. This mechanism
depends on:
 o  the makefile variable CC, which should be set to g++ or CC
 o  the environment variable  OSTYPE, which resolves either to
    sunos4 or to iris.

As CGAL makes use of LEDA, this library should also be compiled 
for the different architectures/compilers. The makefiles suppose
that the four LEDA libraries libL.a, libG.a, libP.a and libWx.a 
are in the directories  $(LEDA_DIR)/lib_$(OSTYPE)_$(CC).

.......................................................................
Getting simple ASCII stream output

For each geometric class CGAL provides an output operator<<(..).

You can switch this feature off by removing the compiler option
-DCGAL_IO in the files  Cgal/MAKE/*_defs.  The wildcard again
is related to on what architecture you compile and which compiler
you use.


 
.......................................................................
What if you have problems?

First have a look at the manual. Maybe we only have explained it in
an obscure way and a second look at it reveals what we really meant.

If that does not help ask the local CGAL responsable. 

If that does not help have a look at the header file and send an 
email to the person who wrote the code. Most probably you will find 


 o  fabri@sophia.inria.fr      (Andreas Fabri)
 o  geert@cs.ruu.nl            (Geert-Jan Giezeman)
 o  kettner@inf.fu-berlin.de   (Lutz Kettner)
 o  schirra@mpi-sb.mpg.de      (Stefan Schirra)
 o  sven@inf.fu-berlin.de      (Sven Schoenherr) 
