%!PS-Adobe-2.0 EPSF-2.0
%%Creator: Box::print() by Christian Lindig
%%BoundingBox: 42 35 551 457
%%Pages: 1
%%EndComments

gsave
31 473 translate
0.691057 -0.691057 scale
% $Id: header.ps,v 1.6 1997/10/03 10:40:50 zeller Exp $
% Header for DDD PostScript Box output

% Copyright (C) 1995 Technische Universitaet Braunschweig, Germany.
% Written by Christian Lindig <lindig@ips.cs.tu-bs.de>.
% 
% This file is part of the DDD Library.
% 
% The DDD Library is free software; you can redistribute it and/or
% modify it under the terms of the GNU Library General Public
% License as published by the Free Software Foundation; either
% version 2 of the License, or (at your option) any later version.
% 
% The DDD Library is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
% See the GNU Library General Public License for more details.
% 
% You should have received a copy of the GNU Library General Public
% License along with the DDD Library -- see the file COPYING.LIB.
% If not, write to the Free Software Foundation, Inc.,
% 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
% 
% DDD is the data display debugger.
% For details, see the DDD World-Wide-Web page, 
% `http://www.cs.tu-bs.de/softech/ddd/',
% or send a mail to the DDD developers <ddd@ips.cs.tu-bs.de>.

%
% make all definitions local to the ddddict dictionary
%

/ddddict 25 dict def 

ddddict begin		% make dict active 

%
% global variables
%

/fontSize+ 12 def
/font+ /Courier def  

%
% some small utilities
%

/cm { 28.34646 mul } bind def

% isolatin1*
% reencode a font to ISO Latin 1 encoding
%
% newfont table oldfont isolatin1*

/isolatin1* {
	findfont
	dup maxlength dict begin
	{
		1 index /FID ne { def } { pop pop } ifelse
	} forall
	/Encoding exch def
	dup /FontName exch def
	currentdict end definefont pop
} bind def

%
% define the ISO Latin 1 encoding of a font ..
%
 
/isotable[
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma
/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S
/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar
/braceright/asciitilde/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve/dotaccent/dieresis
/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron/.notdef/exclamdown/cent
/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guilsinglleft/logicalnot/hyphen/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve
/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex
/Udieresis/Yacute/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute
/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis
/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

%
% ycorrect*
% the reference point of a string ist NOT its lower left corner but 
% its baseline. Therefor the y coordinate must be corrected. The
% correction for the current font is returned.
% ycorrect* y
% 

/ycorrect* {
	currentfont /FontBBox get
	aload pop pop pop
	currentfont /FontMatrix get dtransform
	exch pop
} def 

%
% text*
% print out a string and make sure not to require more space than
% specified.
% font xsize ysize xorigin yorigin (string) text*

/text* {

	/string+ exch def		% set up some variables ..
	moveto				% move to (xorigin,yorigin)
	/ysize+ exch def
	/xsize+ exch def
	/thefont+ exch def

	% right font allready selected ?
	
	thefont+ font+ ne 
	ysize+ fontSize+ ne
	or {	
		% set up the right font - reencode it	
		
		/Symbol thefont+ eq 
		{
			thefont+ findfont
		}{

			/isofont+ isotable thefont+ isolatin1*	
			/isofont+ findfont
		}ifelse

		[ysize+ 0 0 ysize+ neg 0 0] makefont
		setfont
		
		/font+ thefont+ def
		/fontSize+ ysize+ def
	} if

	% correct current point 

	0 ycorrect* neg rmoveto

	% string too long ? scale it down ...
	% the actual font is scaled. There is a good chance,
	% that this will not happen too often when the font is not
	% changed during the calls of text*

	xsize+ string+ stringwidth pop div dup dup
	1 lt {
		
		0 0 1 0 0 6 array astore currentfont exch 
		makefont setfont
		pop
	}{ 
		%
		% string too short ... scale it up
		%

		1.05 gt {
			0 0 1 0 0 6 array astore currentfont exch 
			makefont setfont	
		}{
			pop

		} ifelse
	} ifelse
	
	string+ show

} bind def


	
% 
% arrowline*
% draw a line of given width with an arrow at its end
% len gives the height of the triangle forming the head of the arrow
% and angle the angle at its top
%	
% angle len  x1 y1 x2 y2 linewidth arrowline*
%

/arrowline* {
	setlinewidth			% angle len x1 y1 x2 y2
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	/len+ exch def			% height of triangle

	/alpha+ 
		y2 y1 sub		% define alpha+
		x2 x1 sub
		atan
	def

	/base+				% define half of baseline
		exch 
		2 div dup		% angle angle
		sin exch cos 	 	% sin(angle) cos(angle)
		div			% tan(angle)
		len+
		mul			% half of baseline
	def  
	
	newpath				% draw the line
	x1 y1 moveto 
	x2 len+ alpha+ cos mul sub 	% shorten the line to the end  
	y2 len+ alpha+ sin mul sub 	% of the triangle
	lineto
	stroke		

	gsave				% set the origin to the head of
	0 setlinewidth			% the arrow and rotate the system
	x2 y2 
	translate			% origin now at x2 y2

	alpha+ 90 sub rotate 		% rotate the system

	newpath				% draw a triangle
	0 0 moveto
	base+ len+ neg rlineto
	base+ 2 mul neg 0 rlineto
	closepath
	fill
	
	grestore
} bind def

% 
% line*
% draw a line of given width from (x1,y1) to (x2,y2)
% x1 y1 x2 y2 width line*
%

/line* {
	setlinewidth	% x1 y1 x2 y2
	newpath
	4 2 roll 	% x2 y2 x1 y1
	moveto		% x2 y2
	lineto		
	stroke
} bind def

%
% clean*
% fill a box given by four points with white colour ..
% x1 y1 x2 y2 x3 y3 x4 y4 clean*
%

/clean* {
	gsave
	1 setgray
	0 setlinewidth
	newpath
	moveto  lineto  lineto lineto
	closepath
	fill
	grestore
} bind def

%
% box*
% fill a box given by four points
% x1 y1 x2 y2 x3 y3 x4 y4 box*
%

/box* {
	0 setlinewidth
	newpath
	moveto 	lineto 	lineto lineto
	closepath
	fill
} bind def

%
% arc*
% draw an ellipse with center (cx,cy), diameter dx dy, starting at start
% and ending at end.
% start end dx dy cx cy width ARC*
%

/arc* {
	gsave
	setlinewidth
	translate
	newpath
	dup 3 1 roll		% start end dy dx dy
	div 1 scale		% dy dx/dy 1 scale => start end dy
	
	0 exch  0 exch		% start end 0 0 dy 
	5 -2 roll 		% 0 0 dy start end

	dup
	0 eq {			% replace 0 by 360
		pop 
		360
	} if
	arc
	stroke
	grestore
} bind def


%
% set up the right font to the right size
%

/isofont+ isotable font+ isolatin1* 	% reencode font+
					% and make it the current font
/isofont+ findfont
[fontSize+ 0 0 fontSize+ neg 0 0] makefont
setfont

%%EndProlog
30 10 445 562 493 581 1 arrowline*
30 10 368 214 458 219 1 arrowline*
30 10 368 182 432 170 1 arrowline*
30 10 198 148 177 104 1 arrowline*
30 10 330 148 409 104 1 arrowline*
30 10 203 268 181 324 1 arrowline*
30 10 333 268 435 324 1 arrowline*
16 24 305 24 305 105 16 105 clean*
16 24 304 24 304 25 16 25 box* %(16, 24)(288, 1)
16 25 17 25 17 103 16 103 box* %(16, 25)(1, 78)
/Courier 14 13 19 40 (17) text*
/Courier 14 13 33 40 (: ) text*
/Courier-Bold 49 13 47 40 (*e->_V1) text*
19 40 301 40 301 41 19 41 box* %(19, 40)(282, 1)
19 43 301 43 301 44 19 44 box* %(19, 43)(282, 1)
19 44 20 44 20 100 19 100 box* %(19, 44)(1, 56)
/Courier 175 13 46 59 (<CGAL__Dcel_element_type>) text*
/Courier 21 13 221 59 ( = ) text*
/Courier 35 13 242 59 ({...}) text*
/Courier 42 13 46 72 (_point) text*
/Courier 21 13 221 72 ( = ) text*
/Courier 35 13 242 72 ({...}) text*
/Courier 49 13 46 85 (_header) text*
/Courier 21 13 221 85 ( = ) text*
/Courier 56 13 242 85 (0x113ad8) text*
/Courier 49 13 46 98 (_degree) text*
/Courier 21 13 221 98 ( = ) text*
/Courier 7 13 242 98 (2) text*
300 44 301 44 301 100 300 100 box* %(300, 44)(1, 56)
19 100 301 100 301 101 19 101 box* %(19, 100)(282, 1)
303 25 304 25 304 103 303 103 box* %(303, 25)(1, 78)
16 103 304 103 304 104 16 104 box* %(16, 103)(288, 1)
304 25 305 25 305 104 304 104 box* %(304, 25)(1, 79)
17 104 305 104 305 105 17 105 box* %(17, 104)(288, 1)
336 24 625 24 625 105 336 105 clean*
336 24 624 24 624 25 336 25 box* %(336, 24)(288, 1)
336 25 337 25 337 103 336 103 box* %(336, 25)(1, 78)
/Courier 14 13 339 40 (18) text*
/Courier 14 13 353 40 (: ) text*
/Courier-Bold 49 13 367 40 (*e->_V2) text*
339 40 621 40 621 41 339 41 box* %(339, 40)(282, 1)
339 43 621 43 621 44 339 44 box* %(339, 43)(282, 1)
339 44 340 44 340 100 339 100 box* %(339, 44)(1, 56)
/Courier 175 13 366 59 (<CGAL__Dcel_element_type>) text*
/Courier 21 13 541 59 ( = ) text*
/Courier 35 13 562 59 ({...}) text*
/Courier 42 13 366 72 (_point) text*
/Courier 21 13 541 72 ( = ) text*
/Courier 35 13 562 72 ({...}) text*
/Courier 49 13 366 85 (_header) text*
/Courier 21 13 541 85 ( = ) text*
/Courier 56 13 562 85 (0x113b18) text*
/Courier 49 13 366 98 (_degree) text*
/Courier 21 13 541 98 ( = ) text*
/Courier 7 13 562 98 (2) text*
620 44 621 44 621 100 620 100 box* %(620, 44)(1, 56)
339 100 621 100 621 101 339 101 box* %(339, 100)(282, 1)
623 25 624 25 624 103 623 103 box* %(623, 25)(1, 78)
336 103 624 103 624 104 336 104 box* %(336, 103)(288, 1)
624 25 625 25 625 104 624 104 box* %(624, 25)(1, 79)
337 104 625 104 625 105 337 105 box* %(337, 104)(288, 1)
432 117 721 117 721 172 432 172 clean*
432 117 720 117 720 118 432 118 box* %(432, 117)(288, 1)
432 118 433 118 433 170 432 170 box* %(432, 118)(1, 52)
/Courier 14 13 435 133 (16) text*
/Courier 14 13 449 133 (: ) text*
/Courier-Bold 49 13 463 133 (*e->_F2) text*
435 133 717 133 717 134 435 134 box* %(435, 133)(282, 1)
435 136 717 136 717 137 435 137 box* %(435, 136)(282, 1)
435 137 436 137 436 167 435 167 box* %(435, 137)(1, 30)
/Courier 175 13 462 152 (<CGAL__Dcel_element_type>) text*
/Courier 21 13 637 152 ( = ) text*
/Courier 35 13 658 152 ({...}) text*
/Courier 49 13 462 165 (_header) text*
/Courier 21 13 637 165 ( = ) text*
/Courier 56 13 658 165 (0x113ad8) text*
716 137 717 137 717 167 716 167 box* %(716, 137)(1, 30)
435 167 717 167 717 168 435 168 box* %(435, 167)(282, 1)
719 118 720 118 720 170 719 170 box* %(719, 118)(1, 52)
432 170 720 170 720 171 432 171 box* %(432, 170)(288, 1)
720 118 721 118 721 171 720 171 box* %(720, 118)(1, 53)
433 171 721 171 721 172 433 172 box* %(433, 171)(288, 1)
458 197 726 197 726 252 458 252 clean*
458 197 725 197 725 198 458 198 box* %(458, 197)(267, 1)
458 198 459 198 459 250 458 250 box* %(458, 198)(1, 52)
/Courier 14 13 461 213 (15) text*
/Courier 14 13 475 213 (: ) text*
/Courier-Bold 49 13 489 213 (*e->_F1) text*
461 213 722 213 722 214 461 214 box* %(461, 213)(261, 1)
461 216 722 216 722 217 461 217 box* %(461, 216)(261, 1)
461 217 462 217 462 247 461 247 box* %(461, 217)(1, 30)
/Courier 175 13 488 232 (<CGAL__Dcel_element_type>) text*
/Courier 21 13 663 232 ( = ) text*
/Courier 35 13 684 232 ({...}) text*
/Courier 49 13 488 245 (_header) text*
/Courier 21 13 663 245 ( = ) text*
/Courier 21 13 684 245 (0x0) text*
721 217 722 217 722 247 721 247 box* %(721, 217)(1, 30)
461 247 722 247 722 248 461 248 box* %(461, 247)(261, 1)
724 198 725 198 725 250 724 250 box* %(724, 198)(1, 52)
458 250 725 250 725 251 458 251 box* %(458, 250)(267, 1)
725 198 726 198 726 251 725 251 box* %(725, 198)(1, 53)
459 251 726 251 726 252 459 252 box* %(459, 251)(267, 1)
400 324 689 324 689 444 400 444 clean*
400 324 688 324 688 325 400 325 box* %(400, 324)(288, 1)
400 325 401 325 401 442 400 442 box* %(400, 325)(1, 117)
/Courier 14 13 403 340 (20) text*
/Courier 14 13 417 340 (: ) text*
/Courier-Bold 49 13 431 340 (*e->_P2) text*
403 340 685 340 685 341 403 341 box* %(403, 340)(282, 1)
403 343 685 343 685 344 403 344 box* %(403, 343)(282, 1)
403 344 404 344 404 439 403 439 box* %(403, 344)(1, 95)
/Courier 175 13 430 359 (<CGAL__Dcel_element_type>) text*
/Courier 21 13 605 359 ( = ) text*
/Courier 35 13 626 359 ({...}) text*
/Courier 21 13 430 372 (_V1) text*
/Courier 21 13 605 372 ( = ) text*
/Courier 56 13 626 372 (0x112f40) text*
/Courier 21 13 430 385 (_V2) text*
/Courier 21 13 605 385 ( = ) text*
/Courier 56 13 626 385 (0x112f54) text*
/Courier 21 13 430 398 (_F1) text*
/Courier 21 13 605 398 ( = ) text*
/Courier 56 13 626 398 (0x113488) text*
/Courier 21 13 430 411 (_F2) text*
/Courier 21 13 605 411 ( = ) text*
/Courier 56 13 626 411 (0x113494) text*
/Courier 21 13 430 424 (_P1) text*
/Courier 21 13 605 424 ( = ) text*
/Courier 56 13 626 424 (0x113af8) text*
/Courier 21 13 430 437 (_P2) text*
/Courier 21 13 605 437 ( = ) text*
/Courier 56 13 626 437 (0x113b38) text*
684 344 685 344 685 439 684 439 box* %(684, 344)(1, 95)
403 439 685 439 685 440 403 440 box* %(403, 439)(282, 1)
687 325 688 325 688 442 687 442 box* %(687, 325)(1, 117)
400 442 688 442 688 443 400 443 box* %(400, 442)(288, 1)
688 325 689 325 689 443 688 443 box* %(688, 325)(1, 118)
401 443 689 443 689 444 401 444 box* %(401, 443)(288, 1)
16 324 305 324 305 444 16 444 clean*
16 324 304 324 304 325 16 325 box* %(16, 324)(288, 1)
16 325 17 325 17 442 16 442 box* %(16, 325)(1, 117)
/Courier 14 13 19 340 (19) text*
/Courier 14 13 33 340 (: ) text*
/Courier-Bold 49 13 47 340 (*e->_P1) text*
19 340 301 340 301 341 19 341 box* %(19, 340)(282, 1)
19 343 301 343 301 344 19 344 box* %(19, 343)(282, 1)
19 344 20 344 20 439 19 439 box* %(19, 344)(1, 95)
/Courier 175 13 46 359 (<CGAL__Dcel_element_type>) text*
/Courier 21 13 221 359 ( = ) text*
/Courier 35 13 242 359 ({...}) text*
/Courier 21 13 46 372 (_V1) text*
/Courier 21 13 221 372 ( = ) text*
/Courier 56 13 242 372 (0x112f18) text*
/Courier 21 13 46 385 (_V2) text*
/Courier 21 13 221 385 ( = ) text*
/Courier 56 13 242 385 (0x112f2c) text*
/Courier 21 13 46 398 (_F1) text*
/Courier 21 13 221 398 ( = ) text*
/Courier 56 13 242 398 (0x113488) text*
/Courier 21 13 46 411 (_F2) text*
/Courier 21 13 221 411 ( = ) text*
/Courier 56 13 242 411 (0x113494) text*
/Courier 21 13 46 424 (_P1) text*
/Courier 21 13 221 424 ( = ) text*
/Courier 56 13 242 424 (0x113b38) text*
/Courier 21 13 46 437 (_P2) text*
/Courier 21 13 221 437 ( = ) text*
/Courier 56 13 242 437 (0x113af8) text*
300 344 301 344 301 439 300 439 box* %(300, 344)(1, 95)
19 439 301 439 301 440 19 440 box* %(19, 439)(282, 1)
303 325 304 325 304 442 303 442 box* %(303, 325)(1, 117)
16 442 304 442 304 443 16 443 box* %(16, 442)(288, 1)
304 325 305 325 305 443 304 443 box* %(304, 325)(1, 118)
17 443 305 443 305 444 17 444 box* %(17, 443)(288, 1)
80 148 369 148 369 268 80 268 clean*
80 148 368 148 368 149 80 149 box* %(80, 148)(288, 1)
80 149 81 149 81 266 80 266 box* %(80, 149)(1, 117)
/Courier 7 13 83 164 (9) text*
/Courier 14 13 90 164 (: ) text*
/Courier-Bold 14 13 104 164 (*e) text*
83 164 365 164 365 165 83 165 box* %(83, 164)(282, 1)
83 167 365 167 365 168 83 168 box* %(83, 167)(282, 1)
83 168 84 168 84 263 83 263 box* %(83, 168)(1, 95)
/Courier 175 13 110 183 (<CGAL__Dcel_element_type>) text*
/Courier 21 13 285 183 ( = ) text*
/Courier 35 13 306 183 ({...}) text*
/Courier 21 13 110 196 (_V1) text*
/Courier 21 13 285 196 ( = ) text*
/Courier-Bold 56 13 306 196 (0x112f18) text*
/Courier 21 13 110 209 (_V2) text*
/Courier 21 13 285 209 ( = ) text*
/Courier-Bold 56 13 306 209 (0x112f54) text*
/Courier 21 13 110 222 (_F1) text*
/Courier 21 13 285 222 ( = ) text*
/Courier-Bold 56 13 306 222 (0x113494) text*
/Courier 21 13 110 235 (_F2) text*
/Courier 21 13 285 235 ( = ) text*
/Courier-Bold 56 13 306 235 (0x113488) text*
/Courier 21 13 110 248 (_P1) text*
/Courier 21 13 285 248 ( = ) text*
/Courier-Bold 56 13 306 248 (0x113ad8) text*
/Courier 21 13 110 261 (_P2) text*
/Courier 21 13 285 261 ( = ) text*
/Courier-Bold 56 13 306 261 (0x113b18) text*
364 168 365 168 365 263 364 263 box* %(364, 168)(1, 95)
83 263 365 263 365 264 83 264 box* %(83, 263)(282, 1)
367 149 368 149 368 266 367 266 box* %(367, 149)(1, 117)
80 266 368 266 368 267 80 267 box* %(80, 266)(288, 1)
368 149 369 149 369 267 368 267 box* %(368, 149)(1, 118)
81 267 369 267 369 268 81 268 box* %(81, 267)(288, 1)
47 526 754 526 754 562 47 562 clean*
47 526 753 526 753 527 47 527 box* %(47, 526)(706, 1)
47 527 48 527 48 560 47 560 box* %(47, 527)(1, 33)
/Courier 14 13 50 542 (13) text*
/Courier 14 13 64 542 (: ) text*
/Courier-Bold 35 13 78 542 (face1) text*
50 542 750 542 750 543 50 543 box* %(50, 542)(700, 1)
/Courier-Bold 700 13 50 558 (\(CGAL__Dcel_face_type<CGAL__Dcel_defs<Bops_default_I<CGAL_Cartesian<leda_rational> > > > *\) 0x113494) text*
752 527 753 527 753 560 752 560 box* %(752, 527)(1, 33)
47 560 753 560 753 561 47 561 box* %(47, 560)(706, 1)
753 527 754 527 754 561 753 561 box* %(753, 527)(1, 34)
48 561 754 561 754 562 48 562 box* %(48, 561)(706, 1)
426 581 694 581 694 636 426 636 clean*
426 581 693 581 693 582 426 582 box* %(426, 581)(267, 1)
426 582 427 582 427 634 426 634 box* %(426, 582)(1, 52)
/Courier 14 13 429 597 (14) text*
/Courier 14 13 443 597 (: ) text*
/Courier-Bold 42 13 457 597 (*face1) text*
429 597 690 597 690 598 429 598 box* %(429, 597)(261, 1)
429 600 690 600 690 601 429 601 box* %(429, 600)(261, 1)
429 601 430 601 430 631 429 631 box* %(429, 601)(1, 30)
/Courier 175 13 456 616 (<CGAL__Dcel_element_type>) text*
/Courier 21 13 631 616 ( = ) text*
/Courier 35 13 652 616 ({...}) text*
/Courier 49 13 456 629 (_header) text*
/Courier 21 13 631 629 ( = ) text*
/Courier 21 13 652 629 (0x0) text*
689 601 690 601 690 631 689 631 box* %(689, 601)(1, 30)
429 631 690 631 690 632 429 632 box* %(429, 631)(261, 1)
692 582 693 582 693 634 692 634 box* %(692, 582)(1, 52)
426 634 693 634 693 635 426 635 box* %(426, 634)(267, 1)
693 582 694 582 694 635 693 635 box* %(693, 582)(1, 53)
427 635 694 635 694 636 427 636 box* %(427, 635)(267, 1)
47 478 754 478 754 514 47 514 clean*
47 478 753 478 753 479 47 479 box* %(47, 478)(706, 1)
47 479 48 479 48 512 47 512 box* %(47, 479)(1, 33)
/Courier 14 13 50 494 (10) text*
/Courier 14 13 64 494 (: ) text*
/Courier-Bold 35 13 78 494 (face0) text*
50 494 750 494 750 495 50 495 box* %(50, 494)(700, 1)
/Courier 700 13 50 510 (\(CGAL__Dcel_face_type<CGAL__Dcel_defs<Bops_default_I<CGAL_Cartesian<leda_rational> > > > *\) 0x113488) text*
752 479 753 479 753 512 752 512 box* %(752, 479)(1, 33)
47 512 753 512 753 513 47 513 box* %(47, 512)(706, 1)
753 479 754 479 754 513 753 513 box* %(753, 479)(1, 34)
48 513 754 513 754 514 48 514 box* %(48, 513)(706, 1)
%%Trailer

% $Id: trailer.ps,v 1.3 1996/08/15 13:17:36 zeller Exp $
% Trailer for DDD PostScript Box output

grestore
showpage
end		% of ddddict 
