@! $RCSfile: preliminaries.fw,v $
@! $Revision: 1.4 $
@! $Date: 1996/03/13 15:32:23 $

@A@<Preliminaries@>

@i Handle.fw

@B@<Tuples@>

The classes defined below are containers for objects of the same type
similar to arrays and are used as representation classes, e.g.\ for
the coordinates of points and vectors or the endpoints of segments.
Tuples have no idea of what they represent.
They are pure container classes.
It is the interface class which gives meaning to them.
The tuple elements are not stored in an array in order to avoid index
arithmetic (which could be optimized of course, but doing it explicitly
we do not have to rely on the compiler).
Looping over the elements is not necessary, because this is always done
at the level of the interface class, i.e. the class derived from
@{CGAL_Handle@}.
The names of the member data are less literate as they could be.
Instead of e0, \dots, they are named @{e0@}, \dots making the numbering more
evident. Note that the numbering starts with 0.


@i Twotuple.fw

@i Threetuple.fw

@i Fourtuple.fw

@i Sixtuple.fw

@i basic.fw

@i bool.fw

@i Object.fw

@! Miscellaneous functions
@i misc.fw

@i Quotient.fw

@! Solving linear equations
@i solve.fw

@! Determinants of 2x2, 3x3 and 4x4 matrices
@i determinant.fw


@! Error messages, flags, debugging routines
@i utils.fw

@i enum.fw

@i functions_on_enums.fw

@! Flags for workarounds
@i workaround.fw
@! $Log: preliminaries.fw,v $
@! Revision 1.4  1996/03/13 15:32:23  fabri
@! *** empty log message ***
@!
@! Revision 1.3  1995/11/08 15:36:30  fabri
@! *** empty log message ***
@!
@! Revision 1.2  1995/10/19 18:01:10  fabri
@! *** empty log message ***
@!
@! Revision 1.1  1995/09/18 13:22:38  fabri
@! Initial revision
@!
@! Revision 1.2  1995/08/21 14:29:16  fabri
@! *** empty log message ***
@!
@! Revision 1.1  1995/08/16 11:59:12  fabri
@! Initial revision
@!
