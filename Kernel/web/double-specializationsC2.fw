
@! $RCSfile: double-specializationsC2.fw,v $
@! $Revision: 1.1 $
@! $Date: 1996/03/13 15:32:23 $


@B@<Double specializations@>

Due to the intersection code the library already contains
template specializations for some geometric classes.
Here we instantiate the missing instances.

@C@<A source file to generate template instances@>

@$@<double specializations@>==@{@-
#include <CGAL/Cartesian.h>
#include <CGAL/Triangle_2.h>
#include <CGAL/Parabola_arc_2.h>
#include <CGAL/Iso_rectangle_2.h>
#include <CGAL/Aff_transformation_2.h>

static void dummy();


static void dummy()
{
  // lets go into recursion to mention this symbol;
  // this avoids a warning from intelligent compilers.

  dummy();

  CGAL_Point_2< CGAL_Cartesian<double> > p;
  CGAL_Vector_2< CGAL_Cartesian<double> > v;
  CGAL_Direction_2< CGAL_Cartesian<double> > d;
  CGAL_Segment_2< CGAL_Cartesian<double> > s;
  CGAL_Ray_2< CGAL_Cartesian<double> > r;
  CGAL_Line_2< CGAL_Cartesian<double> > l;
  CGAL_Parabola_2< CGAL_Cartesian<double> > par;
  CGAL_Parabola_arc_2< CGAL_Cartesian<double> > arc;
  CGAL_Triangle_2< CGAL_Cartesian<double> > t;
  CGAL_Iso_rectangle_2< CGAL_Cartesian<double> > ir;
  CGAL_Aff_transformation_2< CGAL_Cartesian<double> > aff;
  p.x();
  v.x();
  d.dx();
  s.source();
  r.source();
  l.a();
  par.base();
  arc.source();
  t.vertex(0);
  ir.vertex(0);
  aff.is_even();

}
@}


@O@<../src/double-specializationsC2.C@>==@{@-
@<CGAL notice@>
// Source: double-specializationsC2.C
// Author: Andreas.Fabri@@sophia.inria.fr

@<double specializations@>

@}


@C@<Template Specialization Registration@>

For the SUN Pro C++ compiler we can register specializations.

@O@<../Templates.DB/double-specializationsC2.opt@>==@{@-
# Author: Andreas.Fabri@@sophia.inria.fr
# Default Options File
special class CGAL_PointC2<double>;
special class CGAL_VectorC2<double>;
special class CGAL_DirectionC2<double>;
#
special class CGAL_LineC2<double>;
special class CGAL_RayC2<double>;
special class CGAL_SegmentC2<double>;
#
special class CGAL_ParabolaC2<double>;
special class CGAL_Parabola_arcC2<double>;
special class CGAL_TriangleC2<double>;
special class CGAL_Iso_rectangleC2<double>;
special class CGAL_Aff_transformationC2<double>;
#
special CGAL_sign(const double&);
#
special CGAL_orientation(const double&, const double&,
                       const double&, const double&,
                       const double&, const double&);
#
special CGAL_collinear(const CGAL_PointC2<double>&,
                       const CGAL_PointC2<double>&,
                       const CGAL_PointC2<double>&);
@}
