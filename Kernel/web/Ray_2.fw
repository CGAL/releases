@! $RCSfile: Ray_2.fw,v $
@! $Revision: 1.6 $
@! $Date: 1996/06/07 15:56:39 $


@C@<Class CGAL_Ray_2<R>@>

@$@<class CGAL_Ray_2<R>@>==@{@-
template < class R >
class CGAL_Ray_2 : public R::Ray_2
{
public:
    CGAL_Ray_2()
      : R::Ray_2()
  {}

  ~CGAL_Ray_2()
  {}

  CGAL_Ray_2(const CGAL_Ray_2<R> &r)
    : R::Ray_2((const R::Ray_2&)r)
  {

  }

  CGAL_Ray_2(const R::Ray_2 &r)
    : R::Ray_2(r)
  {

  }

  CGAL_Ray_2(const CGAL_Point_2<R> &sp,
             const CGAL_Point_2<R> &secondp)
    : R::Ray_2(sp, secondp)
  {}

  CGAL_Ray_2(const CGAL_Point_2<R> &sp,
             const CGAL_Direction_2<R> &d)
    : R::Ray_2(sp, d)
  {}


  CGAL_Ray_2<R> &operator=(const CGAL_Ray_2<R> &r)
  {


    R::Ray_2::operator=(r);
    return *this;
  }

  bool operator==(const CGAL_Ray_2<R> &r) const
  {
    return R::Ray_2::operator==(r);
  }

  bool operator!=(const CGAL_Ray_2<R> &r) const
  {
    return !(*this == r);
  }

  int id() const
  {
    return (int) PTR ;
  }

  CGAL_Point_2<R> start() const
  {
    return R::Ray_2::start();
  }

  CGAL_Point_2<R> source() const
  {
    return R::Ray_2::source();
  }

  CGAL_Point_2<R> second_point() const
  {
    return R::Ray_2::second_point();
  }

  CGAL_Point_2<R> point(int i) const
  {
    return R::Ray_2::point(i);
  }

  CGAL_Direction_2<R> direction() const
  {
    return R::Ray_2::direction();
  }

  CGAL_Line_2<R> supporting_line() const
  {
    return R::Ray_2::supporting_line();
  }

  CGAL_Ray_2<R> opposite() const
  {
    return R::Ray_2::opposite();
  }


  CGAL_Ray_2<R> transform(const CGAL_Aff_transformation_2<R> &t) const
  {
    return R::Ray_2::transform(t);
  }


  bool is_horizontal() const
  {
    return R::Ray_2::is_horizontal();
  }

  bool is_vertical() const
  {
    return R::Ray_2::is_vertical();
  }

  bool is_degenerate() const
  {
    return R::Ray_2::is_degenerate();
  }

  bool has_on(const CGAL_Point_2<R> &p) const
  {
    return R::Ray_2::has_on(p);
  }
};
@}


@D@<Header File@>

@O@<../include/CGAL/Ray_2.h@>==@{@-
@<CGAL notice@>
// Source:Ray_2.h
// Author: Andreas.Fabri@@sophia.inria.fr

#ifndef CGAL_RAY_2_H
#define CGAL_RAY_2_H

#include <CGAL/Segment_2.h>

#ifdef CGAL_HOMOGENEOUS_H
#include <CGAL/RayH2.h>
#endif // CGAL_HOMOGENEOUS_H

#ifdef CGAL_CARTESIAN_H
#include <CGAL/RayC2.h>
#endif // CGAL_CARTESIAN_H

@<class CGAL_Ray_2<R>@>

#endif  // CGAL_RAY_2_H
@}

@! $Log: Ray_2.fw,v $
@! Revision 1.6  1996/06/07 15:56:39  fabri
@! *** empty log message ***
@!
@! Revision 1.5  1996/03/13 15:32:23  fabri
@! *** empty log message ***
@!
@! Revision 1.4  1995/11/06 17:39:50  fabri
@! compiles with GNU g++
@!
@! Revision 1.3  1995/10/19 18:01:10  fabri
@! *** empty log message ***
@!
@! Revision 1.2  1995/09/26 15:15:42  fabri
@! acces via representation class R
@!
@! Revision 1.1  1995/09/18 13:22:38  fabri
@! Initial revision
@!

